@model SmartHealth.Core.Domain.Dtos.UserDto
@using System.Web.Optimization
@using SmartHealth.Core.Domain.Models
@{
    ViewBag.Title = "Edit Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/css/contact")
<div class="leftContent" style="width: 970px">
<div class="boxLeft" style="width: 100%">
    <div class="AboxLeft" style="width: 100%">
        <p style="width: 920px">Cập nhật thông tin</p>
        <div id="contact">
            <div class="container" style="width: 940px">
                <div class="row contact">
                    <form action="@Url.Action("EditProfile", "Home")" method="POST">
                        <div class="row form">
                            <div class="col-md-3">
                            </div>
                            <div class="col-sm-6 row-col center">
                                <div class="box">
                                    <div class="form-group has-error">
                                        @Html.ValidationMessage("error", new {@class = "help-block"})
                                    </div>
                                    @*<div class="form-group">
                                        @Html.TextBoxFor(model => model.Username, new {@class = "form-control", placeholder = "Username", disabled = "disabled"})
                                        @Html.ValidationMessageFor(model => model.Username)
                                    </div>*@
                                    <div class="form-group">
                                        @Html.HiddenFor(model => model.Id, new {@class = "form-control", placeholder = "Password"})
                                        @Html.ValidationMessageFor(model => model.Id)
                                    </div>
                                    <div class="form-group">
                                        @Html.TextBoxFor(model => model.DisplayName, new {@class = "form-control", placeholder = "DisplayName"})
                                        @Html.ValidationMessageFor(model => model.DisplayName)
                                    </div>
                                    <div class="form-group">
                                        @Html.TextBoxFor(model => model.Email, new {@class = "form-control", placeholder = "Email"})
                                        @Html.ValidationMessageFor(model => model.Email)
                                    </div>
                                    <div class="form-group">
                                        @Html.TextBoxFor(model => model.Location, new {@class = "form-control", placeholder = "Address"})
                                        @Html.ValidationMessageFor(model => model.Location)
                                    </div>
                                    <div class="form-group">
                                        @Html.TextBoxFor(model => model.DOB, new {@class = "form-control datepicker", placeholder = "Date of birth"})
                                        @Html.ValidationMessageFor(model => model.DOB)
                                    </div>
                                    <div class="form-group">
                                        @Html.DropDownListFor(model => model.Gender, new SelectList(Enum.GetValues(typeof(Gender))), new {@class = "form-control"}) 
                                        @Html.ValidationMessageFor(model => model.Gender)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                            </div>
                        </div>
                        <div class="row form">
                            <div class="col-md-3">
                            </div>
                            <div class="col-md-6 right">
                                @if (Model.Username == "admin")
                                {
                                    <a href="/backoffice/article" style="float: right; margin-top: 10px; margin-right: 10px;" class="btn btn-success">Quản trị</a>
                                }
                                else
                                {
                                    <button id="submitBtn" style="float: right; margin-top: 10px" type="submit" class="btn btn-success">Cập nhật</button>
                                }
                                <a href="@Url.Action("ChangePassword", new {id = Model.Id})" style="float: right; margin-top: 10px; margin-right: 10px; " class="btn btn-success">Đổi mật khẩu</a>
                            </div>
                            <div class="col-md-3">
                            </div>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
</div>


    <script src="@Url.Content("~/Areas/Administrator/ClipOne/plugins/jquery-validation/dist/jquery.validate.min.js")"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('.datepicker').datepicker();
        $('form').validate({
            rules: {
                Username: {
                    minlength: 3,
                    required: true
                },
                Email: {
                    minlength: 3,
                    required: true,
                    email: true
                },
                DisplayName: {
                    minlength: 3,
                    required: true
                },
                Password: {
                    minlength: 6,
                    required: true
                },
                ConfirmPassword: {
                    minlength: 6,
                    required: true,
                    equalTo: "#Password"
                },
            },
            highlight: function (element) {
                $(element).closest('.form-group').addClass('has-error');
                $(element).closest('.form-group').removeClass('has-success');
            },
            unhighlight: function (element) {
                $(element).closest('.form-group').removeClass('has-error');
                $(element).closest('.form-group').addClass('has-success');
            },
            errorElement: 'span',
            errorClass: 'help-block',
            errorPlacement: function (error, element) {
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });
    });
</script>