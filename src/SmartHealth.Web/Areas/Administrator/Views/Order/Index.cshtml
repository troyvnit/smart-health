@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Administrator/Views/Shared/_Layout.cshtml";
}
<div id="vertical">
    <div id="top-pane">
        <div id="horizontal" style="height: 100%; width: 100%;">
            <div id="center-pane">
                <div class="pane-content">
                    <div class="box-content">
                        <div id="grid"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/x-kendo-template" id="template">
                <div class="tabstrip">
                    <ul>
                        <li class="k-state-active">
                           Thông tin đơn hàng
                        </li>
                    </ul>
                    <div>
                        <div class='details'>
                        </div>
                    </div>
                </div>

            </script>
<script id="payTypeTemplate" type="text/x-kendo-tmpl">
        # if (PayType == 1) { #
            Bảo Kim
        # } else if (PayType == 2){ #
            Payoo
        # } else if (PayType == 3){ #
            Ngân Lượng
        # } else {#
            Thanh toán khi nhận hàng
        # } #
    </script>
<script id="statusTemplate" type="text/x-kendo-tmpl">
        # if (TransactionStatus == 1) { #
            Đơn hàng chờ xử lý
        # } else if (TransactionStatus == 2){ #
            Đang giao hàng
        # } else if (TransactionStatus == 3){ #
            Đã giao hàng
        # } else {#
            Chưa thanh toán
        # } #
    </script>
<script>
    $(document).ready(function () {
        var datasource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("GetOrders", "Order")',
                    type: "post",
                    dataType: "json"
                },
                update: {
                    url: '@Url.Action("CreateOrUpdateOrder", "Order")',
                    type: "post",
                    dataType: "json"
                },
                destroy: {
                    url: '@Url.Action("DeleteOrders", "Order")',
                    type: "post",
                    dataType: "json"
                },
                create: {
                    url: '@Url.Action("CreateOrUpdateOrder", "Order")',
                    type: "post",
                    dataType: "json"
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            batch: true,
            autoSync: true,
            pageSize: 20,
            schema: {
                model: {
                    id: "Id",
                    fields: {
                        Id: { editable: false, nullable: true },
                        TotalAmount: { editable: false, nullable: true },
                        NetAmount: { editable: false, nullable: true },
                        FeeAmount: { editable: false, nullable: true },
                        PayType: { editable: false, type: "number" },
                        CreatedDate: { type: "date" }
                    }
                }
            }
        });
        var grid = $("#grid").kendoGrid({
            dataSource: datasource,
            height: 710,
            filterable: true,
            sortable: true,
            pageable: true,
            navigatable: true,
            editable: true,
            //toolbar: ["save", "cancel"],
            detailTemplate: kendo.template($("#template").html()),
            detailInit: detailInit,
            dataBound: function () {
                this.expandRow(this.tbody.find("tr.k-master-row").first());
            },
            columns: [{
                    field: "Id",
                    width: 80
                }, {
                    field: "ReceiverName",
                    title: "Người đặt"
                }, {
                    field: "ReceiverPhone",
                    title: "Điện thoại"
                }, {
                    field: "OrderUser.Email",
                    title: "Email"
                }, {
                    field: "DeliveryAddress",
                    title: "Địa chỉ"
                }, {
                    field: "DeliveryCityName",
                    title: "Thành phố"
                }, {
                    field: "TotalAmount",
                    title: "Tiền thanh toán"
                }, {
                    field: "NetAmount",
                    title: "Tiền thực nhận"
                }, {
                    field: "FeeAmount",
                    title: "Phí"
                }, {
                    field: "PayType",
                    title: "Hình thức thanh toán",
                    template: $("#payTypeTemplate").html(),
                    editable: false,
                }, {
                    field: "TransactionStatus",
                    title: "Trạng thái",
                    template: $("#statusTemplate").html(),
                    editor: statusDropDownEditor
                }, {
                    field: "CreatedDate",
                    title: "Ngày tạo",
                    format: "{0:dd/MM/yyyy HH:mm:ss}"
                }, { command: "destroy", title: "&nbsp;", width: 90 }
            ]
        }).data("kendoGrid");

        $("#vertical").kendoSplitter({
            orientation: "vertical",
            panes: [
                { collapsible: false }
            ]
        });

        var splitter = $("#horizontal").kendoSplitter({
            orientation: "horizontal",
            panes: [
                { collapsible: true }
            ]
        }).data("kendoSplitter");
    });
    var statusData = [
        { text: "Chưa thanh toán", value: "0" },
        { text: "Đơn hàng đang xử lý", value: "1" },
        { text: "Đang giao hàng", value: "2" },
        { text: "Đã giao hàng", value: "3" }
    ];
    function statusDropDownEditor(container, options) {
        $('<input required data-text-field="text" data-value-field="value" data-bind="value:' + options.field + '"/>')
            .appendTo(container)
            .kendoDropDownList({
                dataTextField: "text",
                dataValueField: "value",
                dataSource: statusData
            });
    }
    
    function detailInit(e) {
        var detailRow = e.detailRow;

        detailRow.find(".tabstrip").kendoTabStrip({
            animation: {
                open: { effects: "fadeIn" }
            }
        });

        detailRow.find(".details").kendoGrid({
            dataSource: {
                transport: {
                    read: {
                        url: '@Url.Action("GetOrderDetails", "Order")' + '?id=' + e.data.Id,
                    type: "post",
                    dataType: "json"
                },
                    update: {
                        url: '@Url.Action("CreateOrUpdateOrder", "Order")',
                    type: "post",
                    dataType: "json"
                },
                    destroy: {
                        url: '@Url.Action("DeleteOrders", "Order")',
                    type: "post",
                    dataType: "json"
                },
                    create: {
                        url: '@Url.Action("CreateOrUpdateOrder", "Order")',
                    type: "post",
                    dataType: "json"
                },
                    parameterMap: function (options, operation) {
                        if (operation !== "read" && options.models) {
                            return { models: kendo.stringify(options.models) };
                        }
                    }
                },
                pageSize: 5
            },
            scrollable: false,
            sortable: true,
            pageable: true,
            columns: [
                { field: "Product.Name", title: "Sản phẩm" }, 
             {
                 field: "Product.MarketPrice",
                 title: "Giá bán"
             }, {
                 field: "Product.SmartHealthPrice",
                 title: "Giá niêm yết"
             }, {
                 field: "Product.Brand",
                 title: "Hãng sản xuất"
             }, {
                 field: "Product.Weight",
                 width: 120,
                 title: "Trọng lượng"
             },
                { field: "Quantity", title: "Số lượng" },
                { title: "Thành tiền", template: "#=Quantity * Product.SmartHealthPrice#" }
            ]
        });
    }
</script>

